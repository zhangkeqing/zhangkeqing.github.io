[{"title":"Git安装使用（一）","date":"2017-03-18T06:19:19.000Z","path":"2017/03/18/Git安装使用（一）/","text":"1. 配置Git个人信息1.1. 设置Git的user name和email：(如果是第一次的话)12git config --global user.name \"zhangkeqing\"git config --global user.email \"xxx@qq.com\" 注意git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。2. 创建版本库2.1. 创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：1234$ mkdir learngit$ cd learngit$ pwd/data/git/learngit 3. 提交文件3.2. 通过 git init 命令把这个目录变成Git可以管理的仓库：12$ git initInitialized empty Git repository in /data/git/learngit/.git/ 3.3. 编写一个README.txt ，填入一些内容：12Git is a version control systemGit is free software 3.4 用命令git add告诉Git，把文件添加到仓库：1$ git add README.txt 在windows环境下出现下面错误： warning: LF will be replaced by CRLF in README.md 解决方法：(删除刚才生成的.git,并进行配置) $ rm -rf .git $ git config –global core.autocrlf false 然后重新执行2.2步骤中的方法 3.5 用命令git commit告诉Git，把文件提交到仓库：1$ git commit -m \"wrote a readme file\" [master (root-commit) 61f2a5a] wrote a readme file 1 file changed, 2 insertions(+) create mode 100644 README.txt 简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。嫌麻烦不想输入-m &quot;xxx&quot;行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。git commit命令执行成功后会告诉你，1个文件被改动（我们新添加的readme.txt文件），插入了两行内容（readme.txt有两行内容）。为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件，比如：123$ git add file1.txt$ git add file2.txt file3.txt$ git commit -m \"add 3 files.\"","tags":[]},{"title":"github + Hexo 搭建个人博客（一）","date":"2017-03-18T06:13:51.000Z","path":"2017/03/18/github-Hexo-搭建个人博客（一）/","text":"1. 环境配置1.1 安装Git环境 可以查看 Git安装使用 1.2 安装NodeJs环境可以查看 NodeJs安装使用 2. 环境配置好以后，可以进行博客的搭建了2.1 安装Hexo首先在系统中创建一个Hexo目录12# -p 表示递归创建目录$ mkdir -p /data/hexo/ 然后进入目录，安装hexo环境：12345678910$ cd /data/hexo/$ npm install hexo-cli -g# 初始化hexo$ hexo init hexo # 如果已经存在 hexo 目录，则直接使用 hexo init 命令就可以了$ cd hexo# 安装生成器$ npm install$ hexo $ hexo g # 或者hexo generate 生成$ hexo s # 启动本地web服务器 server，可以在http://localhost:4000/ 查看 这里有必要提下Hexo常用的几个命令： hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹 hexo server (hexo s) 启动本地web服务，用于博客的预览 hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）另外还有其他几个常用命令：12$ hexo new \"postName\" #新建文章$ hexo new page \"pageName\" #新建页面 常用简写:1234$ hexo n == hexo new$ hexo g == hexo generate$ hexo s == hexo server$ hexo d == hexo deploy 常用组合：12$ hexo d -g #生成部署$ hexo s -g #生成预览 现在我们打开http://localhost:4000/ 已经可以看到一篇内置的blog了。","tags":[]},{"title":"Hello World","date":"2017-03-13T11:55:32.702Z","path":"2017/03/13/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]